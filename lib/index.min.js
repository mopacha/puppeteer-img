const puppeteer=require("puppeteer"),options=process.argv,sleep=t=>new Promise(e=>setTimeout(e,t));async function autoScroll(e){return e.evaluate(()=>new Promise((a,e)=>{let o=0;const i=setInterval(()=>{const e=document.querySelector(".index_canvas_1TQUT");var t=e.scrollHeight;e.scrollBy(0,200),o+=200,o>=t&&(clearInterval(i),a())},100)}))}const run=async()=>{let e,t;4<=options.length&&(e=options[2],t=options[3]);const a=await puppeteer.launch({headless:!0,devtools:!1}),o=await a.newPage();await o.setCookie({url:e,name:"sensorsdata-token",value:t}),await o.goto(e),await o.setViewport({width:1920,height:1080}),await o.waitForNavigation({waitUntil:"load",timeout:3e4}),await o.waitForSelector(".react-grid-layout"),await autoScroll(o);var i=o.evaluate(()=>new Promise(t=>{const a=document.getElementsByClassName("react-grid-layout")[0],o=new MutationObserver(()=>{var e=a;e&&e.children&&e.children.length&&(o.disconnect(),console.log("canvas resolve"),t())});o.observe(a,{attributes:!1,childList:!0,subtree:!0})})),r=sleep(1e4);await Promise.race([i,r]);r=await o.evaluate(()=>{var e=document.querySelector(".index_canvas_1TQUT");return{width:e.scrollWidth,height:e.scrollHeight+300,deviceScaleFactor:window.devicePixelRatio}});await o.setViewport(r);const n=await o.$(".index_canvas_1TQUT");await n.screenshot({path:"example.png"}),await a.close()};run();